"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[1001],{8984:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-0949c062","path":"/kotlin-tutor/collection.html","title":"集合","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ranges","slug":"ranges","link":"#ranges","children":[]},{"level":2,"title":"group","slug":"group","link":"#group","children":[]}],"git":{"createdTime":1667993962000,"updatedTime":1667993962000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.26,"words":77},"filePathRelative":"kotlin-tutor/collection.md","localizedDate":"2022年11月9日","excerpt":""}')},5579:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(6252);const e=(0,t._)("h1",{id:"集合",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#集合","aria-hidden":"true"},"#"),(0,t.Uk)(" 集合")],-1),p={href:"https://kotlinlang.org/docs/collections-overview.html",target:"_blank",rel:"noopener noreferrer"},o=(0,t.uE)('<h2 id="ranges" tabindex="-1"><a class="header-anchor" href="#ranges" aria-hidden="true">#</a> ranges</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">..</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">//1234</span>\n<span class="token comment">//倒序</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">4</span> downTo <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//4321</span>\n<span class="token comment">//step </span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">..</span><span class="token number">8</span> step <span class="token number">2</span><span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">//1357</span>\n<span class="token comment">//不包括10</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span> until <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">// i in 1 until 10, excluding 10</span>\n    <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> group</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> numbers <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;one&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;two&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;three&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;four&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;five&quot;</span></span><span class="token punctuation">)</span>\n\n<span class="token function">println</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span><span class="token function">groupBy</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">println</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>keySelector <span class="token operator">=</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> valueTransform <span class="token operator">=</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">uppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),c={},l=(0,a(3744).Z)(c,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[e,(0,t._)("p",null,[(0,t._)("a",p,[(0,t.Uk)("https://kotlinlang.org/docs/collections-overview.html"),(0,t.Wm)(a)])]),o])}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);