"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[5708],{5648:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-ca44b392","path":"/kotlin-tutor/gradle/gradle-tips.html","title":"gradle用法","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"对所有项目生效，在${USER_HOME}/.gradle/下创建init.gradle文件","slug":"对所有项目生效-在-user-home-gradle-下创建init-gradle文件","link":"#对所有项目生效-在-user-home-gradle-下创建init-gradle文件","children":[]},{"level":2,"title":"gradle添加ext","slug":"gradle添加ext","link":"#gradle添加ext","children":[]},{"level":2,"title":"使用extra","slug":"使用extra","link":"#使用extra","children":[]},{"level":2,"title":"使用gradle.properties","slug":"使用gradle-properties","link":"#使用gradle-properties","children":[]},{"level":2,"title":"关于gradle插件","slug":"关于gradle插件","link":"#关于gradle插件","children":[{"level":3,"title":"修改生成apk名称和BuildConfig中添加apk支持的cpu架构","slug":"修改生成apk名称和buildconfig中添加apk支持的cpu架构","link":"#修改生成apk名称和buildconfig中添加apk支持的cpu架构","children":[]}]},{"level":2,"title":"使用java8的timeapi不生效","slug":"使用java8的timeapi不生效","link":"#使用java8的timeapi不生效","children":[]},{"level":2,"title":"Gradle依赖引入","slug":"gradle依赖引入","link":"#gradle依赖引入","children":[{"level":3,"title":"Gradle新老版本关键字","slug":"gradle新老版本关键字","link":"#gradle新老版本关键字","children":[]},{"level":3,"title":"引入依赖基本方式","slug":"引入依赖基本方式","link":"#引入依赖基本方式","children":[]},{"level":3,"title":"引入依赖复杂方式","slug":"引入依赖复杂方式","link":"#引入依赖复杂方式","children":[]}]},{"level":2,"title":"让debug和release不冲突","slug":"让debug和release不冲突","link":"#让debug和release不冲突","children":[]},{"level":2,"title":"split api","slug":"split-api","link":"#split-api","children":[]}],"git":{"createdTime":1667993962000,"updatedTime":1669518688000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":2}]},"readingTime":{"minutes":6.25,"words":1875},"filePathRelative":"kotlin-tutor/gradle/gradle-tips.md","localizedDate":"2022年11月9日","excerpt":""}')},6191:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(6252);const t=(0,e.uE)('<h1 id="gradle用法" tabindex="-1"><a class="header-anchor" href="#gradle用法" aria-hidden="true">#</a> gradle用法</h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>对单个项目生效，在项目中的build.gradle修改内容</p></div><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code> \n\nallprojects <span class="token punctuation">{</span>\n    repositories <span class="token punctuation">{</span>\n        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/google/&#39;</span> <span class="token punctuation">}</span>\n        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/jcenter/&#39;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对所有项目生效-在-user-home-gradle-下创建init-gradle文件" tabindex="-1"><a class="header-anchor" href="#对所有项目生效-在-user-home-gradle-下创建init-gradle文件" aria-hidden="true">#</a> 对所有项目生效，在${USER_HOME}/.gradle/下创建init.gradle文件</h2><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>allprojects<span class="token punctuation">{</span>\n    repositories <span class="token punctuation">{</span>\n        <span class="token keyword">def</span> ALIYUN_REPOSITORY_URL <span class="token operator">=</span> <span class="token string">&#39;https://maven.aliyun.com/repository/public/&#39;</span>\n        <span class="token keyword">def</span> ALIYUN_JCENTER_URL <span class="token operator">=</span> <span class="token string">&#39;https://maven.aliyun.com/repository/jcenter/&#39;</span>\n        <span class="token keyword">def</span> ALIYUN_GOOGLE_URL <span class="token operator">=</span> <span class="token string">&#39;https://maven.aliyun.com/repository/google/&#39;</span>\n        <span class="token keyword">def</span> ALIYUN_GRADLE_PLUGIN_URL <span class="token operator">=</span> <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span>\n        all <span class="token punctuation">{</span> ArtifactRepository repo <span class="token operator">-&gt;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>repo <span class="token keyword">instanceof</span> <span class="token class-name">MavenArtifactRepository</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">def</span> url <span class="token operator">=</span> repo<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;https://repo1.maven.org/maven2/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">&quot;Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_REPOSITORY_URL</span></span><span class="token string">.&quot;</span></span>\n                    remove repo\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;https://jcenter.bintray.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">&quot;Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_JCENTER_URL</span></span><span class="token string">.&quot;</span></span>\n                    remove repo\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;https://dl.google.com/dl/android/maven2/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">&quot;Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_GOOGLE_URL</span></span><span class="token string">.&quot;</span></span>\n                    remove repo\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;https://plugins.gradle.org/m2/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">&quot;Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_GRADLE_PLUGIN_URL</span></span><span class="token string">.&quot;</span></span>\n                    remove repo\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        maven <span class="token punctuation">{</span> url ALIYUN_REPOSITORY_URL <span class="token punctuation">}</span>\n        maven <span class="token punctuation">{</span> url ALIYUN_JCENTER_URL <span class="token punctuation">}</span>\n        maven <span class="token punctuation">{</span> url ALIYUN_GOOGLE_URL <span class="token punctuation">}</span>\n        maven <span class="token punctuation">{</span> url ALIYUN_GRADLE_PLUGIN_URL <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gradle添加ext" tabindex="-1"><a class="header-anchor" href="#gradle添加ext" aria-hidden="true">#</a> gradle添加ext</h2><h2 id="使用extra" tabindex="-1"><a class="header-anchor" href="#使用extra" aria-hidden="true">#</a> 使用extra</h2><p><strong>注意</strong></p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>ext<span class="token punctuation">{</span>\n    <span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;development&quot;</span></span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',9),i={href:"https://juejin.cn/post/6979872825561579533",target:"_blank",rel:"noopener noreferrer"},p={href:"https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},o={href:"https://developer.android.google.cn/studio/build/gradle-tips?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},l=(0,e._)("code",null,"ext",-1),c=(0,e.uE)('<div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">// build.gradle</span>\n\next <span class="token punctuation">{</span>\n    compileSdkVersion <span class="token operator">=</span> <span class="token number">28</span>\n    buildToolsVersion <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;28.0.3&quot;</span></span>\n    supportLibVersion <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;28.0.0&quot;</span></span>\n    <span class="token punctuation">...</span>\n<span class="token punctuation">}</span>\n \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是由于缺乏IDE的辅助(跳转查看、全局重构等都不支持)，实际使用体验欠佳。</p><p>在<code>KTL</code>中用<code>extra</code>来代替<code>Groovy</code>中的<code>ext</code></p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// The extra object can be used for custom properties and makes them available to all</span>\n<span class="token comment">// modules in the project.</span>\n<span class="token comment">// The following are only a few examples of the types of properties you can define.</span>\nextra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdkVersion&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">28</span>\n<span class="token comment">// You can also create properties to specify versions for dependencies.</span>\n<span class="token comment">// Having consistent versions between modules can avoid conflicts with behavior.</span>\nextra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;supportLibVersion&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;28.0.0&quot;</span></span>\n \nandroid <span class="token punctuation">{</span>\n    <span class="token comment">// Use the following syntax to access properties you defined at the project level:</span>\n    <span class="token comment">// rootProject.extra[&quot;property_name&quot;]</span>\n    <span class="token function">compileSdkVersion</span><span class="token punctuation">(</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;sdkVersion&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// Alternatively, you can access properties using a type safe delegate:</span>\n    <span class="token keyword">val</span> sdkVersion<span class="token operator">:</span> Int <span class="token keyword">by</span> rootProject<span class="token punctuation">.</span>extra\n    <span class="token operator">..</span><span class="token punctuation">.</span>\n    <span class="token function">compileSdkVersion</span><span class="token punctuation">(</span>sdkVersion<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token operator">..</span><span class="token punctuation">.</span>\ndependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support:appcompat-v7:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">rootProject<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>supportLibVersion</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token operator">..</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>build.gralde</code>中的<code>ext</code>数据是可以在<code>build.gradle.kts</code>中使用<code>extra</code>进行访问的。 使用</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code> minSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\ntargetSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用gradle-properties" tabindex="-1"><a class="header-anchor" href="#使用gradle-properties" aria-hidden="true">#</a> 使用gradle.properties</h2><p>gradle.properties</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">android.nonTransitiveRClass</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>\n<span class="token key attr-name">compose_version</span><span class="token punctuation">=</span><span class="token value attr-value">1.2.1</span>\n<span class="token key attr-name">compiler_version</span><span class="token punctuation">=</span><span class="token value attr-value">1.3.1</span>\n<span class="token key attr-name">ktor_version</span><span class="token punctuation">=</span><span class="token value attr-value">2.1.1</span>\n<span class="token key attr-name">retrofitVersion</span><span class="token punctuation">=</span><span class="token value attr-value">2.9.0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在子项目的build.gradle.kts中配置</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> compose_version<span class="token operator">:</span> String <span class="token keyword">by</span> project\n<span class="token keyword">val</span> compiler_version<span class="token operator">:</span> String <span class="token keyword">by</span> project\nplugins <span class="token punctuation">{</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nandroid <span class="token punctuation">{</span>\n    compileSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n    namespace <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.mobile.comp.qiqi&quot;</span></span>\n    defaultConfig <span class="token punctuation">{</span>\n        applicationId <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.mobile.comp.qiqi&quot;</span></span>\n        minSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n        targetSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n        versionCode <span class="token operator">=</span> <span class="token number">1</span>\n        versionName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0.1&quot;</span></span>\n\n        testInstrumentationRunner <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span>\n        vectorDrawables <span class="token punctuation">{</span>\n            useSupportLibrary <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    buildTypes <span class="token punctuation">{</span>\n        <span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;release&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            isMinifyEnabled <span class="token operator">=</span> <span class="token boolean">false</span>\n            <span class="token function">setProguardFiles</span><span class="token punctuation">(</span>\n                <span class="token function">listOf</span><span class="token punctuation">(</span>\n                    <span class="token function">getDefaultProguardFile</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;proguard-android-optimize.txt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token string-literal singleline"><span class="token string">&quot;proguard-rules.pro&quot;</span></span>\n                <span class="token punctuation">)</span>\n            <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    compileOptions <span class="token punctuation">{</span>\n        sourceCompatibility <span class="token operator">=</span> JavaVersion<span class="token punctuation">.</span>VERSION_1_8\n        targetCompatibility <span class="token operator">=</span> JavaVersion<span class="token punctuation">.</span>VERSION_1_8\n    <span class="token punctuation">}</span>\n    kotlinOptions <span class="token punctuation">{</span>\n        jvmTarget <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.8&quot;</span></span>\n    <span class="token punctuation">}</span>\n    buildFeatures <span class="token punctuation">{</span>\n        compose <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n    composeOptions <span class="token punctuation">{</span>\n        kotlinCompilerExtensionVersion <span class="token operator">=</span>  libs<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>composeVersion<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//&quot;1.3.2&quot;</span>\n    <span class="token punctuation">}</span>\n    packagingOptions <span class="token punctuation">{</span>\n        resources <span class="token punctuation">{</span>\n            excludes <span class="token operator">+=</span> <span class="token string-literal singleline"><span class="token string">&quot;/META-INF/{AL2.0,LGPL2.1}&quot;</span></span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ndependencies <span class="token punctuation">{</span>\n\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.core:core-ktx:1.9.0&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.material:material:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-tooling-preview:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.5.1&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.activity:activity-compose:1.6.0&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">testImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;junit:junit:4.13.2&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.test.ext:junit:1.1.3&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.test.espresso:espresso-core:3.4.0&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-test-junit4:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">debugImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-tooling:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">debugImplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.compose.ui:ui-test-manifest:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">compose_version</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关于gradle插件" tabindex="-1"><a class="header-anchor" href="#关于gradle插件" aria-hidden="true">#</a> 关于gradle插件</h2><p>agp(android gradle plugin)的定义</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>implementation &quot;com.android.tools.build:gradle:7.3.1&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而为什么我们要在根目录的build.gradle.kts加上<code>com.android.application</code>?</p><p><code>com.android.application</code>的artifactid是</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// https://mvnrepository.com/artifact/com.android.application/com.android.application.gradle.plugin</span>\n<span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application:com.android.application.gradle.plugin:7.3.1&quot;</span></span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>内部含有依赖<code>com.android.tools.build:gradle</code>,所以我们只需要引用<code>com.android.application</code>就可以了 同理<code>com.android.library</code></p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// https://mvnrepository.com/artifact/com.android.library/com.android.library.gradle.plugin</span>\n<span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.library:com.android.library.gradle.plugin:7.3.1&quot;</span></span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也包含了<code>com.android.tools.build:gradle</code> 我们最终只需要在根目录的build.gradle.kts加上</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>plugins <span class="token punctuation">{</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;7.3.1&quot;</span></span> apply <span class="token boolean">false</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.library&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;7.3.1&quot;</span></span> apply <span class="token boolean">false</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;1.7.10&quot;</span></span> apply <span class="token boolean">false</span>\n    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.jvm&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;1.7.10&quot;</span></span> apply <span class="token boolean">false</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改生成apk名称和buildconfig中添加apk支持的cpu架构" tabindex="-1"><a class="header-anchor" href="#修改生成apk名称和buildconfig中添加apk支持的cpu架构" aria-hidden="true">#</a> 修改生成apk名称和BuildConfig中添加apk支持的cpu架构</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> abiCodes <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;armeabi-v7a&quot;</span></span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;x86&quot;</span></span> <span class="token keyword">to</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;x86_64&quot;</span></span> <span class="token keyword">to</span> <span class="token number">3</span><span class="token punctuation">)</span>\nandroid<span class="token punctuation">.</span>applicationVariants<span class="token punctuation">.</span><span class="token function">all</span> <span class="token punctuation">{</span>\n    <span class="token keyword">val</span> buildType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>buildType<span class="token punctuation">.</span>name\n    <span class="token keyword">val</span> variant <span class="token operator">=</span> <span class="token keyword">this</span>\n    outputs<span class="token punctuation">.</span><span class="token function">all</span> <span class="token punctuation">{</span>\n        <span class="token keyword">val</span> name <span class="token operator">=</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">find</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>filterType <span class="token operator">==</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>build<span class="token punctuation">.</span>api<span class="token punctuation">.</span>variant<span class="token punctuation">.</span>FilterConfiguration<span class="token punctuation">.</span>FilterType<span class="token punctuation">.</span>ABI<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">.</span>identifier\n        <span class="token keyword">val</span> baseAbiCode <span class="token operator">=</span> abiCodes<span class="token punctuation">[</span>name<span class="token punctuation">]</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>baseAbiCode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token comment">//写入cpu架构信息</span>\n            variant<span class="token punctuation">.</span><span class="token function">buildConfigField</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;String&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;CUP_ABI&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;\\&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\&quot;&quot;</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">is</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>build<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>api<span class="token punctuation">.</span>ApkVariantOutputImpl<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//修改apk名称</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>buildType <span class="token operator">==</span> <span class="token string-literal singleline"><span class="token string">&quot;release&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>outputFileName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;KotlinDSL_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">buildType</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.apk&quot;</span></span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>buildType <span class="token operator">==</span> <span class="token string-literal singleline"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>outputFileName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;KotlinDSL_V</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">variant<span class="token punctuation">.</span>versionName</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">name</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">buildType</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.apk&quot;</span></span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用java8的timeapi不生效" tabindex="-1"><a class="header-anchor" href="#使用java8的timeapi不生效" aria-hidden="true">#</a> 使用java8的timeapi不生效</h2><p>添加</p><div class="language-KotlinDSL line-numbers-mode" data-ext="KotlinDSL"><pre class="language-KotlinDSL"><code>   compileOptions {\n      isCoreLibraryDesugaringEnabled=true\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\ndependencies{\n     coreLibraryDesugaring(&quot;com.android.tools:desugar_jdk_libs:1.2.2&quot;)\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gradle依赖引入" tabindex="-1"><a class="header-anchor" href="#gradle依赖引入" aria-hidden="true">#</a> Gradle依赖引入</h2><p>自Android studio版本更新至3.0后，连带着<strong>com.android.tools.build:gradle</strong> 工具也升级到了3.0.0，在3.0.0中使用了最新的<strong>Gralde 4.0</strong> 里程碑版本作为gradle的编译版本，该版本gradle编译速度有所加速；</p><h3 id="gradle新老版本关键字" tabindex="-1"><a class="header-anchor" href="#gradle新老版本关键字" aria-hidden="true">#</a> Gradle新老版本关键字</h3><table><thead><tr><th>4.x+版本配置</th><th>已弃用配置</th></tr></thead><tbody><tr><td>api</td><td>compile</td></tr><tr><td>implement</td><td>compile</td></tr><tr><td>compileOnly</td><td>provided</td></tr><tr><td>runtimeOnly</td><td>apk</td></tr><tr><td>testimplementation</td><td>testCompile</td></tr><tr><td>androidTestimplementation</td><td>androidTestCompile</td></tr><tr><td>debugimplementation</td><td>debugCompile</td></tr><tr><td>releaseimplementation</td><td>releaseCompile</td></tr></tbody></table><ul><li><strong>api</strong></li></ul><blockquote><p>与compile对应，功能完全一样，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），与implementation不同，这个依赖可以传递，其他module无论在编译时和运行时都可以访问这个依赖的实现，也就是会泄漏一些不应该不使用的实现。举个例子，A依赖B，B依赖C，如果都是使用api配置的话，A可以直接使用C中的类（编译时和运行时），而如果是使用implementation配置的话，在编译时，A是无法访问C中的类的。</p></blockquote><ul><li><strong>implementation</strong></li></ul><blockquote><p>与compile对应，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），但是<strong>在编译时不会将依赖的实现暴露给其他module</strong>，也就是只有在运行时其他module才能访问这个依赖中的实现;</p></blockquote><blockquote><p>简单的说，就是使用implementation指令的依赖不会传递;</p></blockquote><blockquote><p>使用这个配置，可以显著提升构建时间，因为它可以减少重新编译的module的数量。Google建议尽量使用这个依赖配置;</p></blockquote><ul><li><strong>compileOnly</strong></li></ul><blockquote><p>与provided对应，Gradle把依赖加到编译路径，编译时使用，不会打包到输出（aar或apk）。这可以减少输出的体积，在只在编译时需要，在运行时可选的情况，很有用</p></blockquote><ul><li><strong>apk</strong></li></ul><blockquote><p>只在生成apk的时候参与打包，编译时不会参与，很少用。</p></blockquote><ul><li><strong>testImplementation</strong></li></ul><blockquote><p>只在单元测试代码的编译以及最终打包测试apk时有效。</p></blockquote><ul><li><strong>androidTestImplementation</strong></li></ul><blockquote><p>只在Android相关单元测试代码的编译以及最终打包测试apk时有效。</p></blockquote><ul><li><strong>debugImplementation</strong></li></ul><blockquote><p>只在 debug 模式的编译和最终的 debug apk 打包时有效</p></blockquote><ul><li><strong>releaseImplementation</strong></li></ul><blockquote><p>仅仅针对 Release 模式的编译和最终的 Release apk 打包。</p></blockquote><hr><h3 id="引入依赖基本方式" tabindex="-1"><a class="header-anchor" href="#引入依赖基本方式" aria-hidden="true">#</a> 引入依赖基本方式</h3><p>理论上gradle支持三种类型的引用，方式如下：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    \n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat:appcompat:1.0.2&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-本地项目依赖-module依赖" tabindex="-1"><a class="header-anchor" href="#_1-本地项目依赖-module依赖" aria-hidden="true">#</a> 1. 本地项目依赖 --&gt; module依赖</h4><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种依赖方式是直接依赖本地工程代码，比如这个 <strong>:projectABC</strong> 就是在整个工程项目配置的 <strong>settings.gradle</strong> 中进行include操作; 例如：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n   <span class="token function">include</span> <span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:projectABC&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-本地二进制依赖-jar和so等文件" tabindex="-1"><a class="header-anchor" href="#_2-本地二进制依赖-jar和so等文件" aria-hidden="true">#</a> 2. 本地二进制依赖 --&gt; jar和so等文件</h4><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种依赖方式是依赖工程中 <strong>libs</strong> 目录下的Jar等文件；</p><p>如果还想进行单独某个文件的引用</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">files</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;libs/aaa.jar&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;libs/bbb.jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">files</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;x/y/z/ccc.jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：Gradle的路径是相对于build.gradle文件来读取的，所以上面是这样的相对路径</p></blockquote><h4 id="_3-远端二进制依赖" tabindex="-1"><a class="header-anchor" href="#_3-远端二进制依赖" aria-hidden="true">#</a> 3.远端二进制依赖</h4><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat:appcompat:1.0.2&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是简洁写法，也可以进行完整写法，如：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span>group<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;androidx.appcompat&quot;</span></span><span class="token punctuation">,</span> name<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;appcompat&quot;</span></span><span class="token punctuation">,</span> version<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;1.0.2&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="引入依赖复杂方式" tabindex="-1"><a class="header-anchor" href="#引入依赖复杂方式" aria-hidden="true">#</a> 引入依赖复杂方式</h3><h4 id="根据task类型引入" tabindex="-1"><a class="header-anchor" href="#根据task类型引入" aria-hidden="true">#</a> 根据Task类型引入</h4><p>有时候我们在引入的时候还需要考虑debug，release，test包的情况如</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">testimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;junit:junit:4.12&quot;</span></span><span class="token punctuation">)</span>\n    \n    <span class="token function">androidTestimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support.test:runner:1.0.1&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">androidTestimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support.test.espresso:espresso-core:3.0.1&quot;</span></span><span class="token punctuation">)</span>\n    \n    <span class="token function">debugimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.squareup.leakcanary:leakcanary-android:2.0-beta-2&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token function">releaseimplementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.squareup.leakcanary:leakcanary-android-no-op:2.0-beta-2&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="排除引用" tabindex="-1"><a class="header-anchor" href="#排除引用" aria-hidden="true">#</a> 排除引用</h4><p>有时候为了解决引入的冲突，需要在引入远端包的同时排除这些包的某几个依赖</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>\n    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.bumptech.glide:glide:4.9.0&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-fragment&quot;</span></span><span class="token punctuation">)</span>\n        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-core-ui&quot;</span></span><span class="token punctuation">)</span>\n        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-compat&quot;</span></span><span class="token punctuation">)</span>\n        <span class="token function">exclude</span> <span class="token punctuation">(</span>group<span class="token operator">:</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.support&quot;</span></span><span class="token punctuation">,</span> module<span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;support-annotations&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="让debug和release不冲突" tabindex="-1"><a class="header-anchor" href="#让debug和release不冲突" aria-hidden="true">#</a> 让debug和release不冲突</h2><p>添加下面的,包名会改变</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">//kotlin kts</span>\nbuildTypes<span class="token punctuation">{</span>\n     <span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            applicationIdSuffix<span class="token operator">=</span><span class="token string-literal singleline"><span class="token string">&quot;.debug&quot;</span></span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">// groovy</span>\nbuildTypes<span class="token punctuation">{</span>\n     debug<span class="token punctuation">{</span>\n            applicationIdSuffix<span class="token operator">=</span><span class="token interpolation-string"><span class="token string">&quot;.debug&quot;</span></span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>productFlavors <span class="token punctuation">{</span>\n    free <span class="token punctuation">{</span>\n        applicationId <span class="token string-literal singleline"><span class="token string">&quot;net.company.appname.free&quot;</span></span>\n    <span class="token punctuation">}</span>\n\n    paid <span class="token punctuation">{</span>\n        applicationId <span class="token string-literal singleline"><span class="token string">&quot;net.company.appname.paid&quot;</span></span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="split-api" tabindex="-1"><a class="header-anchor" href="#split-api" aria-hidden="true">#</a> split api</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">//kotlin kts </span>\n  splits <span class="token punctuation">{</span>\n            abi <span class="token punctuation">{</span>\n                isEnable<span class="token operator">=</span><span class="token boolean">true</span>\n                <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token comment">// 设置包含，调用前需要先用 reset 将默认清除</span>\n                <span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;arm64-v8a&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;armeabi-v7a&quot;</span></span><span class="token punctuation">)</span>\n                isUniversalApk <span class="token operator">=</span><span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>defaultConfig<span class="token punctuation">{</span>\n     splits <span class="token punctuation">{</span>\n            abi <span class="token punctuation">{</span>\n                enable <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',83),u={},r=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[t,(0,e._)("p",null,[(0,e._)("a",i,[(0,e.Uk)("https://juejin.cn/post/6979872825561579533"),(0,e.Wm)(a)]),(0,e._)("a",p,[(0,e.Uk)("https://developer.android.google.cn/studio/build/migrate-to-kts?hl=zh-cn"),(0,e.Wm)(a)])]),(0,e._)("p",null,[(0,e.Uk)("Google 官方推荐的一个 Gradle 配置"),(0,e._)("a",o,[(0,e.Uk)("最佳实践"),(0,e.Wm)(a)]),(0,e.Uk)("是在项目最外层 build.gradle 文件的"),l,(0,e.Uk)("代码块中定义项目范围的属性，然后在所有模块间共享这些属性，比如我们通常会这样存放依赖的版本号。")]),c])}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);