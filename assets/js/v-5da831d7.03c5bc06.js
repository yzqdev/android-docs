"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[7495],{5849:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-5da831d7","path":"/tutor/basic/activity.html","title":"activity","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"实例","slug":"实例","link":"#实例","children":[]}],"git":{"createdTime":1667993962000,"updatedTime":1667993962000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":4.36,"words":1307},"filePathRelative":"tutor/basic/activity.md","localizedDate":"2022年11月9日","excerpt":""}')},111:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var t=a(6252);const e=(0,t.uE)('<h1 id="activity" tabindex="-1"><a class="header-anchor" href="#activity" aria-hidden="true">#</a> activity</h1><h1 id="android-activity" tabindex="-1"><a class="header-anchor" href="#android-activity" aria-hidden="true">#</a> Android Activity</h1><blockquote><p>Activity 代表具有用户界面的单个屏幕，就像Java的窗口或框架一样。Android Activity是ContextThemeWrapper类的子类。</p></blockquote><p>如果您使用过C，C ++或Java编程语言，那么您一定已经看到您的程序从main()函数开始。与之非常相似，Android系统以Activity来启动其程序，该Activity以对onCreate()回调方法的调用开始。有一系列启动Activity的回调方法和一系列拆除Activity的回调方法，如下面的Activity生命周期图所示：</p><p><img src="https://www.jc2182.com/images/android/activity.jpg" alt="activity"></p><p>Activity类定义以下回调，即事件。您不需要实现所有的回调方法。但是，重要的是，您必须了解每一个，并实施那些确保您的应用程序符合用户期望的行为。</p><table><thead><tr><th>回调方法</th><th>描述</th></tr></thead><tbody><tr><td><strong>onCreate()</strong></td><td>这是第一个回调，并在首次创建Activity时调用。</td></tr><tr><td><strong>onStart()</strong></td><td>当Activity对用户可见时，将调用此回调。</td></tr><tr><td><strong>onResume()</strong></td><td>当用户开始与应用程序交互时，将调用此方法。</td></tr><tr><td><strong>onPause()</strong></td><td>暂停的Activity不接收用户输入，并且无法执行任何代码，并且在当前Activity被暂停并且先前的Activity正在恢复时将被调用。</td></tr><tr><td><strong>onStop()</strong></td><td>当Activity不再可见时，将调用此回调。</td></tr><tr><td><strong>onDestroy()</strong></td><td>在Activity销毁系统之前，将调用此回调。</td></tr><tr><td><strong>onRestart()</strong></td><td>Activity停止后重新启动时，将调用此回调。</td></tr></tbody></table><h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h2>',8),p={href:"https://www.jc2182.com/andriod/android-hello-world.html",target:"_blank",rel:"noopener noreferrer"},o=(0,t.uE)('<ol><li>您将使用Android Studio创建一个Android应用程序，并将其命名为HelloWorld，位于com.jc2182.helloworld包下。</li><li>修改主活动文件MainActivity.java，如下所述。其余文件保持不变。</li><li>运行该应用程序以启动Android模拟器并验证在该应用程序中所做更改的结果。</li></ol><p>以下是修改后的主要活动文件src/com.jc2182.helloworld/MainActivity.java的内容。该文件包括每种基本生命周期方法。所述Log.d方法已经被用来生成日志消息-</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  \n  \n  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">AppCompatActivity</span></span><span class="token punctuation">;</span>\n  \n  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Bundle</span></span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>\n  \n  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>\n  \n      <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;Android : &quot;</span><span class="token punctuation">;</span>\n  \n      <span class="token doc-comment comment">/** 在activity首次创建时调用。 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot;onCreate() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  \n      <span class="token doc-comment comment">/** 当activity即将可见时调用。 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot;onStart() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  \n      <span class="token doc-comment comment">/** 当activity变为可见时调用。 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot;onResume() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  \n      <span class="token doc-comment comment">/** 在另一个activity获得焦点时调用。 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot; onPause() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  \n      <span class="token doc-comment comment">/** 当activity不再可见时调用 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot;onStop() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  \n      <span class="token doc-comment comment">/** 在活activity销毁之前调用。 */</span>\n      <span class="token annotation punctuation">@Override</span>\n      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&quot;onDestroy() 事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Activity类使用项目的res/layout文件夹中可用的XML文件加载所有UI组件。以下语句从res/layout/activity_main.xml文件加载UI组件：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一个应用程序可以具有一个或多个activity，而没有任何限制。您为应用程序定义的每个activity都必须在AndroidManifest.xml文件中声明，并且应用程序的main activity必须在清单中使用<code>&lt;intent-filter&gt;</code>声明，其中包括MAIN操作和LAUNCHER类别，如下所示：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.jc2182.helloworld<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  \n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>\n          <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@mipmap/ic_launcher<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@string/app_name<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name"><span class="token namespace">android:</span>roundIcon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@mipmap/ic_launcher_round<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name"><span class="token namespace">android:</span>supportsRtl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@style/AppTheme<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.MainActivity<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>\n                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.action.MAIN<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  \n                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.intent.category.LAUNCHER<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span>\n  \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果未为您的activity之一声明MAIN操作或LAUNCHER类别，则您的应用程序图标将不会出现在主屏幕的应用程序列表中。让我们尝试运行修改后的Hello World！我们刚刚修改的应用程序。我假设您在进行环境设置时已创建了AVD。要从Android Studio运行该应用，请打开您项目的activity文件之一，然后Android Studio运行图标从工具栏中单击“运行”图标。Android studio将应用程序安装在您的AVD上并启动它，如果设置和应用程序一切正常，它将显示Emulator窗口，并且您应该在Android studio的LogCat窗口中看到以下日志消息-</p><div class="language-t4 line-numbers-mode" data-ext="t4"><pre class="language-t4"><code>  2020-07-07 16:21:59.664 8407-8407/com.jc2182.helloworld D/Android :: onCreate() 事件\n  2020-07-07 16:21:59.671 8407-8407/com.jc2182.helloworld D/Android :: onStart() 事件\n  2020-07-07 16:21:59.672 8407-8407/com.jc2182.helloworld D/Android :: onResume() 事件\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://www.jc2182.com/images/android/activity1.jpg" alt="activity"></p><p>让我们尝试单击Android模拟器上的锁屏按钮，它将在Android studio的LogCat窗口中生成以下事件消息：</p><div class="language-t4 line-numbers-mode" data-ext="t4"><pre class="language-t4"><code>  2020-07-07 16:24:24.042 8407-8407/com.jc2182.helloworld D/Android ::  onPause() 事件\n  2020-07-07 16:24:25.042 8407-8407/com.jc2182.helloworld D/Android ::  onStop() 事件\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们再次尝试在Android模拟器上解锁屏幕，它将在Android Studio的LogCat窗口中生成以下事件消息：</p><div class="language-t4 line-numbers-mode" data-ext="t4"><pre class="language-t4"><code>  2020-07-07 16:25:59.671 8407-8407/com.jc2182.helloworld D/Android :: onStart() 事件\n  2020-07-07 16:25:59.672 8407-8407/com.jc2182.helloworld D/Android :: onResume() 事件\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，让我们再次尝试Android后退按钮在Android仿真器上单击“后退”按钮，它将在Android Studio的LogCat窗口中生成以下事件消息，从而完成了Android应用程序的活动生命周期。</p><div class="language-t4 line-numbers-mode" data-ext="t4"><pre class="language-t4"><code>  2020-07-07 16:26:24.042 8407-8407/com.jc2182.helloworld D/Android ::  onPause() 事件\n  2020-07-07 16:26:25.042 8407-8407/com.jc2182.helloworld D/Android ::  onStop() 事件\n  2020-07-07 16:26:25.043 8407-8407/com.jc2182.helloworld D/Android ::  onDestroy() 事件\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',16),c={},i=(0,a(3744).Z)(c,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[e,(0,t._)("p",null,[(0,t.Uk)("本示例将带您通过简单的步骤来展示Android应用程序活动的生命周期。请按照以下步骤修改我们在"),(0,t._)("a",p,[(0,t.Uk)("Hello World示例"),(0,t.Wm)(a)]),(0,t.Uk)("一章中创建的Android应用程序-")]),o])}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);