"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[2782],{4015:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-426e6acc","path":"/kotlin-tutor/gradle/library.html","title":"安卓开发组件库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"组件库kts","slug":"组件库kts","link":"#组件库kts","children":[]},{"level":2,"title":"demo演示kts","slug":"demo演示kts","link":"#demo演示kts","children":[]}],"git":{"createdTime":1667993962000,"updatedTime":1667993962000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.41,"words":122},"filePathRelative":"kotlin-tutor/gradle/library.md","localizedDate":"2022年11月9日","excerpt":""}')},7403:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});var t=a(6252);const e=[(0,t.uE)('<h1 id="安卓开发组件库" tabindex="-1"><a class="header-anchor" href="#安卓开发组件库" aria-hidden="true">#</a> 安卓开发组件库</h1><h2 id="组件库kts" tabindex="-1"><a class="header-anchor" href="#组件库kts" aria-hidden="true">#</a> 组件库kts</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>plugins <span class="token punctuation">{</span>\n  <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.library&quot;</span></span><span class="token punctuation">)</span>\n  <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span>\n\n<span class="token punctuation">}</span>\nandroid <span class="token punctuation">{</span>\n  compileSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n  defaultConfig <span class="token punctuation">{</span>\n    minSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n    targetSdk<span class="token operator">=</span>rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ndependencies <span class="token punctuation">{</span>\n  <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span><span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;dir&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;include&quot;</span></span> <span class="token keyword">to</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;*.aar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token function">implementation</span><span class="token punctuation">(</span>androidEx<span class="token punctuation">.</span>appcompat<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="demo演示kts" tabindex="-1"><a class="header-anchor" href="#demo演示kts" aria-hidden="true">#</a> demo演示kts</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>plugins <span class="token punctuation">{</span>\n  <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.android.application&quot;</span></span><span class="token punctuation">)</span>\n  <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.jetbrains.kotlin.android&quot;</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nandroid <span class="token punctuation">{</span>\n  compileSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;compileSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n  namespace <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.demo&quot;</span></span>\n\n  defaultConfig <span class="token punctuation">{</span>\n    applicationId <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.yzq.demo&quot;</span></span>\n    minSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;minSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n    targetSdk <span class="token operator">=</span> rootProject<span class="token punctuation">.</span>extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;targetSdk&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span> Int\n    versionCode <span class="token operator">=</span> <span class="token number">1</span>\n    versionName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0&quot;</span></span>\n  <span class="token punctuation">}</span>\n  buildFeatures<span class="token punctuation">{</span>\n    viewBinding<span class="token punctuation">{</span>\n      enable<span class="token operator">=</span><span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  buildTypes <span class="token punctuation">{</span>\n    <span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;release&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      isMinifyEnabled <span class="token operator">=</span> <span class="token boolean">false</span>\n      <span class="token function">setProguardFiles</span><span class="token punctuation">(</span>\n        <span class="token function">listOf</span><span class="token punctuation">(</span>\n          <span class="token function">getDefaultProguardFile</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;proguard-android.txt&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token string-literal singleline"><span class="token string">&quot;proguard-rules.pro&quot;</span></span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ndependencies <span class="token punctuation">{</span>\n  <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">fileTree</span><span class="token punctuation">(</span><span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;dir&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;libs&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;include&quot;</span></span> <span class="token keyword">to</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;*.jar&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;*.aar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n  <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;:ArcLayout&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token function">implementation</span><span class="token punctuation">(</span>androidEx<span class="token punctuation">.</span>bundles<span class="token punctuation">.</span>common<span class="token punctuation">)</span>\n  <span class="token function">testImplementation</span><span class="token punctuation">(</span>jTest<span class="token punctuation">.</span>core<span class="token punctuation">)</span>\n  <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span>jTest<span class="token punctuation">.</span>ext<span class="token punctuation">)</span>\n  <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span>jTest<span class="token punctuation">.</span>espresso<span class="token punctuation">)</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5)],i={},p=(0,a(3744).Z)(i,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,e)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);