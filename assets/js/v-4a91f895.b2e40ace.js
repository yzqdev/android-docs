"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[7237],{405:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-4a91f895","path":"/flutter/tips.html","title":"一些小技巧","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"改包名","slug":"改包名","link":"#改包名","children":[{"level":3,"title":"包名","slug":"包名","link":"#包名","children":[]},{"level":3,"title":"应用名称","slug":"应用名称","link":"#应用名称","children":[]},{"level":3,"title":"图标","slug":"图标","link":"#图标","children":[]},{"level":3,"title":"启动图片","slug":"启动图片","link":"#启动图片","children":[]},{"level":3,"title":"其他方式","slug":"其他方式","link":"#其他方式","children":[]}]},{"level":2,"title":"查看数据库和shared_references","slug":"查看数据库和shared-references","link":"#查看数据库和shared-references","children":[]},{"level":2,"title":"响应式布局","slug":"响应式布局","link":"#响应式布局","children":[{"level":3,"title":"Flutter适配iPad和平板的原理","slug":"flutter适配ipad和平板的原理","link":"#flutter适配ipad和平板的原理","children":[]}]},{"level":2,"title":"app更新","slug":"app更新","link":"#app更新","children":[{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"如何定义已经是最新版本?","slug":"如何定义已经是最新版本","link":"#如何定义已经是最新版本","children":[]}]},{"level":2,"title":"flutter瘦身","slug":"flutter瘦身","link":"#flutter瘦身","children":[{"level":3,"title":"分开打包","slug":"分开打包","link":"#分开打包","children":[]}]},{"level":2,"title":"1. 拆分打包","slug":"_1-拆分打包","link":"#_1-拆分打包","children":[{"level":3,"title":"合并打包","slug":"合并打包","link":"#合并打包","children":[]},{"level":3,"title":"设置extractNativeLibs","slug":"设置extractnativelibs","link":"#设置extractnativelibs","children":[]}]},{"level":2,"title":"版本号不生效","slug":"版本号不生效","link":"#版本号不生效","children":[]},{"level":2,"title":"The argument type \'Function\' can\'t be assigned to the parameter type \'void Function()?\' after null safety","slug":"the-argument-type-function-can-t-be-assigned-to-the-parameter-type-void-function-after-null-safety","link":"#the-argument-type-function-can-t-be-assigned-to-the-parameter-type-void-function-after-null-safety","children":[]}],"git":{"createdTime":1659917471000,"updatedTime":1665131741000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":3}]},"readingTime":{"minutes":5.6,"words":1679},"filePathRelative":"flutter/tips.md","localizedDate":"2022年8月8日","excerpt":""}')},275:(n,a,s)=>{s.r(a),s.d(a,{default:()=>r});var e=s(6252);const t=s.p+"assets/img/database.4d003a2e.png",p=(0,e.uE)('<h1 id="一些小技巧" tabindex="-1"><a class="header-anchor" href="#一些小技巧" aria-hidden="true">#</a> 一些小技巧</h1><h2 id="改包名" tabindex="-1"><a class="header-anchor" href="#改包名" aria-hidden="true">#</a> 改包名</h2><p>在 Flutter 中，并没有统一地修改图标、应用名称和包名的地方，所以要在各自语言对应的地方进行修改:</p><h3 id="包名" tabindex="-1"><a class="header-anchor" href="#包名" aria-hidden="true">#</a> 包名</h3><ul><li>Android 是在 <code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>main</code> ▸ <code>AndroidManifest.xml</code> 中修改<code>package=&quot;xxx.xxx.xxx&quot;</code>; 以及在 <code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>build.gradle</code>中修改<code>applicationId &quot;xxx.xxx.xxx&quot;</code>; 并且需要修改<code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>main</code> ▸ <code>......</code> ▸ <code>MainActivity.java</code>对应的包路径</li><li>iOS 在 <code>ios</code> ▸ <code>Runner</code> ▸ <code>Info.plist</code> 中修改<code>CFBundleIdentifier</code>对应的Value</li></ul><p>写法与原生相同，并且可以不一致。</p><blockquote><p>PS:不推荐修改包名，包名最好在项目开始时定下...之后修改可能会出点什么小问题...</p></blockquote><h3 id="应用名称" tabindex="-1"><a class="header-anchor" href="#应用名称" aria-hidden="true">#</a> 应用名称</h3><ul><li>Android 是在 <code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>main</code> ▸ <code>AndroidManifest.xml</code> 中修改<code>android:label=&quot;XXX&quot;</code>;</li><li>iOS 在 <code>ios</code> ▸ <code>Runner</code> ▸ <code>Info.plist</code> 中修改<code>CFBundleName</code>对应的Value</li></ul><h3 id="图标" tabindex="-1"><a class="header-anchor" href="#图标" aria-hidden="true">#</a> 图标</h3><ul><li>Android 在<code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>res</code> ▸ <code>mipmap-...</code> 文件夹中替换相应图片</li><li>iOS 在 <code>ios</code> ▸ <code>Runner</code> ▸ <code>Assets.xcassets</code> ▸ <code>AppIcon.appiconset</code>文件夹中替换相应尺寸的图片， 如果使用不同的文件名，那还必须更新同一目录中的<code>Contents.json</code>文件。</li></ul><h3 id="启动图片" tabindex="-1"><a class="header-anchor" href="#启动图片" aria-hidden="true">#</a> 启动图片</h3><ul><li>Android 在<code>android</code> ▸ <code>app</code> ▸ <code>src</code> ▸ <code>res</code> ▸ <code>drawable</code> ▸ <code>launch_background.xml</code> 通过自定义drawable来实现自定义启动界面。</li><li>iOS 在 <code>ios</code> ▸ <code>Runner</code> ▸ <code>Assets.xcassets</code> ▸ <code>LaunchImage.imageset</code>文件夹中替换相应尺寸的图片， 如果使用不同的文件名，那还必须更新同一目录中的<code>Contents.json</code>文件。</li></ul><h3 id="其他方式" tabindex="-1"><a class="header-anchor" href="#其他方式" aria-hidden="true">#</a> 其他方式</h3><p>可以使用Xcode打开ios文件夹下的<code>Runner.xcworkspace</code>项目，像原生项目一样修改。</p><h2 id="查看数据库和shared-references" tabindex="-1"><a class="header-anchor" href="#查看数据库和shared-references" aria-hidden="true">#</a> 查看数据库和shared_references</h2><blockquote><p>查看数据库</p></blockquote><p>点在android studio下面的<code>App Inspecttion</code>,找到连接的设备就可以看到sqlite数据库 <img src="'+t+'" alt="图片"></p><p>点开android studio右侧的<code>Device File Explorer</code>,找到 <code>data =&gt; data =&gt; 包名</code>,下面有一个<code>shared_prefs</code>文件夹,就是shared_preference数据</p><h2 id="响应式布局" tabindex="-1"><a class="header-anchor" href="#响应式布局" aria-hidden="true">#</a> 响应式布局</h2><h3 id="flutter适配ipad和平板的原理" tabindex="-1"><a class="header-anchor" href="#flutter适配ipad和平板的原理" aria-hidden="true">#</a> Flutter适配iPad和平板的原理</h3><p>其实吧，在Flutter中适配各种尺寸像iPad、平板甚至现在Flutter可以支持web、Desktop之后，有更多的屏幕适配。试着想一想我们在ios、Android原生中怎么做的适配？</p><p>首先，我们的知道屏幕是什么尺寸的，然后给不同尺寸的屏幕定义一个范围，如：手机屏幕在一个范围内，pad在一个范围内。然后在获取当前的横竖屏状态，根据屏幕尺寸和横竖屏状态，给屏幕设置一个layout布局。</p><p>其实，在Flutter中也一样。很多第三方库中设置了当屏幕最小边的范围小于600时就是手机屏幕。大于600就是pad...</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt; 600: mobile\n600 &lt; ScreenSize &lt; 950: tablet\n大于950: desktop\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义好标准后，第三方库做的无非就是定义一些widget wrapper，(包装类)。一些定义设置值得方法。仅此而已。</p><h2 id="app更新" tabindex="-1"><a class="header-anchor" href="#app更新" aria-hidden="true">#</a> app更新</h2>',27),o={href:"https://github.com/xuexiangjys/flutter_xupdate",target:"_blank",rel:"noopener noreferrer"},l=(0,e.uE)('<h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><p>json格式必须完全一样,<code>versionCode</code>,<code>VersionName</code>,<code>ApkMd5</code>必须认真检查(不过你可以自定义json) md5可以用上面的md5工具判断</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;Code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;Msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;UpdateStatus&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;VersionCode&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;VersionName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.1&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;UploadTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2020-04-10 17:28:41&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;ModifyContent&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\r\\n1、优化api接口。\\r\\n2、添加使用demo演示。\\r\\n3、新增自定义更新服务API接口。\\r\\n4、优化更新提示界面。&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;DownloadUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:5244/d/app-release.apk&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;ApkSize&quot;</span><span class="token operator">:</span> <span class="token number">2048</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;ApkMd5&quot;</span><span class="token operator">:</span> <span class="token string">&quot;03beecef824fb7e274bd858d39689fb4&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何定义已经是最新版本" tabindex="-1"><a class="header-anchor" href="#如何定义已经是最新版本" aria-hidden="true">#</a> 如何定义已经是最新版本?</h3><p>下面的错误代码2004就是最新版本,按照这个来就好</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">initXUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Platform</span><span class="token punctuation">.</span>isAndroid <span class="token operator">||</span> <span class="token class-name">Platform</span><span class="token punctuation">.</span>isWindows<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token class-name">FlutterXUpdate</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>\n\n              <span class="token comment">///是否输出日志</span>\n              debug<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///是否使用post请求</span>\n              isPost<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///post请求是否是上传json</span>\n              isPostJson<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///请求响应超时时间</span>\n              timeout<span class="token punctuation">:</span> <span class="token number">25000</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///是否开启自动模式</span>\n              isWifiOnly<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///是否开启自动模式</span>\n              isAutoMode<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///需要设置的公共参数</span>\n              supportSilentInstall<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n              <span class="token comment">///在下载过程中，如果点击了取消的话，是否弹出切换下载方式的重试提示弹窗</span>\n              enableRetry<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token function">catchError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n \n\n      <span class="token class-name">FlutterXUpdate</span><span class="token punctuation">.</span><span class="token function">setUpdateHandler</span><span class="token punctuation">(</span>\n          onUpdateError<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span><span class="token operator">?</span> message<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//下载失败</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token operator">!</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;code&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2004</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token class-name">ToastUtils</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;已是最新版本!&quot;</span></span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;code&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token class-name">FlutterXUpdate</span><span class="token punctuation">.</span><span class="token function">showRetryUpdateTipDialog</span><span class="token punctuation">(</span>\n              retryContent<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;服务器故障无法继续下载，是否考虑切换码云下载？&#39;</span></span><span class="token punctuation">,</span>\n              retryUrl<span class="token punctuation">:</span>\n                  <span class="token string-literal"><span class="token string">&#39;https://gitee.com/yzqdev/app-release/attach_files/1040158/download&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          _message <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">message</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> onUpdateParse<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">?</span> json<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n        <span class="token comment">//这里是自定义json解析</span>\n        <span class="token keyword">return</span> <span class="token function">customParseJson</span><span class="token punctuation">(</span>json <span class="token operator">?</span><span class="token operator">?</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">updateMessage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;ios暂不支持XUpdate更新&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="flutter瘦身" tabindex="-1"><a class="header-anchor" href="#flutter瘦身" aria-hidden="true">#</a> flutter瘦身</h2><h3 id="分开打包" tabindex="-1"><a class="header-anchor" href="#分开打包" aria-hidden="true">#</a> 分开打包</h3><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>flutter build apk <span class="token operator">--</span><span class="token function">split-per</span><span class="token operator">-</span>abi\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令会把arm64-v8a和armeabi v7a分开,只会有三十二位或者64位的包 安卓打包分为两种：</p><ol><li>拆分打包（上传应用市场使用）</li><li>合并打包（分发使用）</li></ol><h2 id="_1-拆分打包" tabindex="-1"><a class="header-anchor" href="#_1-拆分打包" aria-hidden="true">#</a> 1. 拆分打包</h2><p>拆分打包是指的针对不同的CPU进行打包，比如arm和arm64指的是32位、64位的abi。</p>',13),i={href:"https://developer.android.com/studio/build/configure-apk-splits#configure-APK-versions",target:"_blank",rel:"noopener noreferrer"},c=(0,e.uE)('<p>即如果我们版本code填10，那么会带有前缀，比如“1010”、“2010”，比如我们填写的版本号是10，那么通过反编译apk我们可以看到。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app-armeabi-v7a-release.apk打出来的versionCode是1010。\n app-arm64-v8a-release.apk打出来的versionCode是2010。\n app-x86_64-release.apk打出来的versionCode是4010。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拆分打包命令</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>flutter build apk <span class="token operator">--</span>obfuscate <span class="token operator">--</span><span class="token function">split-debug</span><span class="token operator">-</span>info debuginfo   <span class="token operator">--</span>target-platform android-arm<span class="token punctuation">,</span>android-arm64<span class="token punctuation">,</span>android-x64 <span class="token operator">--</span><span class="token function">split-per</span><span class="token operator">-</span>abi\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时会生成</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>app-arm64-v8a-release.apk   app-armeabi-v7a-release.apk   app-x86_64-release.apk \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对应不同CPU类型的包</p><h3 id="合并打包" tabindex="-1"><a class="header-anchor" href="#合并打包" aria-hidden="true">#</a> 合并打包</h3><p>合并打包是指将两个版本或者三个版本的安装包，打到一个apk中，即会增加apk的大小，但是对于国内手机是比较友好的。比如2020款的红米9A居然还是32位版本。</p><p>这种方式可以用来在国内的各种分发平台或者直接发给用户使用。</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>flutter build apk <span class="token operator">--</span>obfuscate <span class="token operator">--</span><span class="token function">split-debug</span><span class="token operator">-</span>info debuginfo   <span class="token operator">--</span>target-platform android-arm<span class="token punctuation">,</span>android-arm64<span class="token punctuation">,</span>android-x64\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>去掉--split-per-abi即可，target-platform选择自己想要加入的cpu架构，这种打包会生成</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app-release.apk\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种打包方式会增加apk包的大小。</p><h3 id="设置extractnativelibs" tabindex="-1"><a class="header-anchor" href="#设置extractnativelibs" aria-hidden="true">#</a> 设置extractNativeLibs</h3><p>在<code>&lt;application&gt;&lt;/application&gt;</code>加上<code>android:extractNativeLibs=&quot;true&quot;</code>进行so的压缩</p><p>类似这样</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>\n        <span class="token attr-name"><span class="token namespace">android:</span>allowBackup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">android:</span>label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@string/app_name<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">android:</span>usesCleartextTraffic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@mipmap/ic_launcher<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">android:</span>extractNativeLibs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>n<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="版本号不生效" tabindex="-1"><a class="header-anchor" href="#版本号不生效" aria-hidden="true">#</a> 版本号不生效</h2><p>Flutter的App版本号设置在pubspec.yaml中，+号前面是版本名称，后面是版本号，在此修改会自动应用到Android和IOS项目对应版本号中，修改完安装发现并未生效，解决方法：</p><p>1、修改后执行flutter get</p><p>2、执行flutter clean</p><p>现在重新build 安装就能生效了</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>version: 1.0.0+1\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="the-argument-type-function-can-t-be-assigned-to-the-parameter-type-void-function-after-null-safety" tabindex="-1"><a class="header-anchor" href="#the-argument-type-function-can-t-be-assigned-to-the-parameter-type-void-function-after-null-safety" aria-hidden="true">#</a> The argument type &#39;Function&#39; can&#39;t be assigned to the parameter type &#39;void Function()?&#39; after null safety</h2><p>Instead of</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token operator">?</span> onPressed<span class="token punctuation">;</span> <span class="token comment">// Bad</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>use</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span> onPressed<span class="token punctuation">;</span> <span class="token comment">// Good</span>\n<span class="token keyword">final</span> <span class="token class-name">VoidCallback</span><span class="token operator">?</span> onPressed<span class="token punctuation">;</span> <span class="token comment">// Good</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',29),d={},r=(0,s(3744).Z)(d,[["render",function(n,a){const s=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[p,(0,e._)("p",null,[(0,e.Uk)("使用"),(0,e._)("a",o,[(0,e.Uk)("https://github.com/xuexiangjys/flutter_xupdate"),(0,e.Wm)(s)])]),l,(0,e._)("p",null,[(0,e.Uk)("这种方式主要是为了上架google市场使用的。 这种方式打的包，其中的版本号不是flutter的pubspec.yaml中填写的版本，而是会带上前缀。这是google官方推荐的方式（"),(0,e._)("a",i,[(0,e.Uk)("https://developer.android.com/studio/build/configure-apk-splits#configure-APK-versions"),(0,e.Wm)(s)]),(0,e.Uk)("）。")]),c])}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);