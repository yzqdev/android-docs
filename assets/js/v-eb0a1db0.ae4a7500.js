"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[6246],{4752:(a,e,n)=>{n.r(e),n.d(e,{data:()=>s});const s=JSON.parse('{"key":"v-eb0a1db0","path":"/kotlin-tutor/import.html","title":"引入包","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"引入类","slug":"引入类","link":"#引入类","children":[]}],"git":{"createdTime":1667993962000,"updatedTime":1667993962000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.2,"words":60},"filePathRelative":"kotlin-tutor/import.md","localizedDate":"2022年11月9日","excerpt":""}')},6396:(a,e,n)=>{n.r(e),n.d(e,{default:()=>i});var s=n(6252);const t=[(0,s.uE)('<h1 id="引入包" tabindex="-1"><a class="header-anchor" href="#引入包" aria-hidden="true">#</a> 引入包</h1><h2 id="引入类" tabindex="-1"><a class="header-anchor" href="#引入类" aria-hidden="true">#</a> 引入类</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>example<span class="token punctuation">.</span>Message\n\n<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入包中所有的 <span class="token operator">--</span><span class="token operator">&gt;</span>\n<span class="token keyword">import</span> org<span class="token punctuation">.</span>example<span class="token punctuation">.</span><span class="token operator">*</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不仅可以导入类,还可以导入类中的方法</p><ul><li>导入顶部的方法和属性</li><li>导入object中的方法和属性</li><li>导入enum和constant</li></ul>',5)],o={},i=(0,n(3744).Z)(o,[["render",function(a,e){return(0,s.wg)(),(0,s.iD)("div",null,t)}]])},3744:(a,e)=>{e.Z=(a,e)=>{const n=a.__vccOpts||a;for(const[a,s]of e)n[a]=s;return n}}}]);