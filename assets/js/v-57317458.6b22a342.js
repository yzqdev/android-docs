"use strict";(self.webpackChunkandroid_docs=self.webpackChunkandroid_docs||[]).push([[7710],{873:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-57317458","path":"/flutter/localization.html","title":"flutter多语言","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"使用官方推荐的","slug":"使用官方推荐的","link":"#使用官方推荐的","children":[{"level":3,"title":"添加您自己的本地化信息","slug":"添加您自己的本地化信息","link":"#添加您自己的本地化信息","children":[]}]},{"level":2,"title":"使用idea插件","slug":"使用idea插件","link":"#使用idea插件","children":[]}],"git":{"createdTime":1665020170000,"updatedTime":1665020170000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":2.12,"words":637},"filePathRelative":"flutter/localization.md","localizedDate":"2022年10月6日","excerpt":""}')},3533:(n,a,s)=>{s.r(a),s.d(a,{default:()=>m});var e=s(6252);const t=(0,e.uE)('<h1 id="flutter多语言" tabindex="-1"><a class="header-anchor" href="#flutter多语言" aria-hidden="true">#</a> flutter多语言</h1><h2 id="使用官方推荐的" tabindex="-1"><a class="header-anchor" href="#使用官方推荐的" aria-hidden="true">#</a> 使用官方推荐的</h2><h3 id="添加您自己的本地化信息" tabindex="-1"><a class="header-anchor" href="#添加您自己的本地化信息" aria-hidden="true">#</a> 添加您自己的本地化信息</h3><p>引入 <code>flutter_localizations</code> package 后，请按照以下说明将本地化的文本添加到您的应用程序。</p><ol><li>将 <code>intl</code> package 添加到 <code>pubspec.yaml</code> 文件中：</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>   <span class="token key atrule">dependencies</span><span class="token punctuation">:</span>\n     <span class="token key atrule">flutter</span><span class="token punctuation">:</span>\n       <span class="token key atrule">sdk</span><span class="token punctuation">:</span> flutter\n     <span class="token key atrule">flutter_localizations</span><span class="token punctuation">:</span>\n       <span class="token key atrule">sdk</span><span class="token punctuation">:</span> flutter\n     <span class="token key atrule">intl</span><span class="token punctuation">:</span> ^0.17.0 <span class="token comment"># Add this line</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>另外，在 <code>pubspec.yaml</code> 文件中，启用 <code>generate</code> 标志。该设置项添加在 pubspec 中 Flutter 部分，通常处在 pubspec 文件中后面的部分。</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>   <span class="token comment"># The following section is specific to Flutter.</span>\n   <span class="token key atrule">flutter</span><span class="token punctuation">:</span>\n     <span class="token key atrule">generate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Add this line</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 Flutter 项目的根目录中添加一个新的 yaml 文件，命名为 <code>l10n.yaml</code>，其内容如下：</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>   <span class="token key atrule">arb-dir</span><span class="token punctuation">:</span> lib/l10n\n   <span class="token key atrule">template-arb-file</span><span class="token punctuation">:</span> app_en.arb\n   <span class="token key atrule">output-localization-file</span><span class="token punctuation">:</span> app_localizations.dart\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该文件用于配置本地化工具；在上面的示例中，指定输入文件在 <code>${FLUTTER_PROJECT}/lib/l10n</code> 中，<code>app_en.arb</code> 文件提供模板，生成的本地化文件在 <code>app_localizations.dart</code> 文件中。</p><ol start="4"><li>在 <code>${FLUTTER_PROJECT}/lib/l10n</code> 中，添加 <code>app_en.arb</code> 模板文件。如下：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>   <span class="token punctuation">{</span>\n       <span class="token property">&quot;helloWorld&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">,</span>\n       <span class="token property">&quot;@helloWorld&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The conventional newborn programmer greeting&quot;</span>\n       <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>接下来，在同一目录中添加一个 <code>app_es.arb</code> 文件，对同一条信息做西班牙语的翻译：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>   <span class="token punctuation">{</span>\n       <span class="token property">&quot;helloWorld&quot;</span><span class="token operator">:</span> <span class="token string">&quot;¡Hola Mundo!&quot;</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li><p>运行 <code>flutter gen-l10n</code> 命令，您将在 <code>${FLUTTER_PROJECT}/.dart_tool/flutter_gen/gen_l10n</code> 中看到生成的文件。</p></li><li><p>在调用 <code>MaterialApp</code> 的构造函数时候，添加 <code>import</code> 语句，导入 <code>app_localizations.dart</code> 和 <code>AppLocalizations.delegate</code>。</p></li></ol><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>   <span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter_gen/gen_l10n/app_localizations.dart&#39;</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>   <span class="token keyword">return</span> <span class="token keyword">const</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n     title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Localizations Sample App&#39;</span></span><span class="token punctuation">,</span>\n     localizationsDelegates<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n       <span class="token class-name">AppLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span> <span class="token comment">// Add this line</span>\n       <span class="token class-name">GlobalMaterialLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n       <span class="token class-name">GlobalWidgetsLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n       <span class="token class-name">GlobalCupertinoLocalizations</span><span class="token punctuation">.</span>delegate<span class="token punctuation">,</span>\n     <span class="token punctuation">]</span><span class="token punctuation">,</span>\n     supportedLocales<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n       <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;en&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// English, no country code</span>\n       <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;es&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Spanish, no country code</span>\n     <span class="token punctuation">]</span><span class="token punctuation">,</span>\n     home<span class="token punctuation">:</span> <span class="token class-name">MyHomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n   <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>在你应用的任何地方，都使用 <code>AppLocalizations</code>，这里它被用于在 Text widget 里展示翻译过的消息。</li></ol><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>   <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token class-name">AppLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>helloWorld<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="9"><li>您也可以使用生成的 <code>localizationsDelegates</code> 和 <code>supportedLocales</code> 列表，而不是手动提供它们。</li></ol><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>   <span class="token keyword">const</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n     title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Localizations Sample App&#39;</span></span><span class="token punctuation">,</span>\n     localizationsDelegates<span class="token punctuation">:</span> <span class="token class-name">AppLocalizations</span><span class="token punctuation">.</span>localizationsDelegates<span class="token punctuation">,</span>\n     supportedLocales<span class="token punctuation">:</span> <span class="token class-name">AppLocalizations</span><span class="token punctuation">.</span>supportedLocales<span class="token punctuation">,</span>\n   <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果目标设备的语言环境设置为英语，此代码生成的 Text widget 会展示「Hello World!」。如果目标设备的语言环境设置为西班牙语，则展示「Hola Mundo!」，在 <code>arb</code> 文件中，每个条目的键值都被用作 getter 的方法名称，而该条目的值则表示本地化的信息。</p>',23),l={href:"https://github.com/cfug/flutter.cn/tree/master/examples/internationalization/gen_l10n_example",target:"_blank",rel:"noopener noreferrer"},o=(0,e._)("code",null,"gen_l10n_example",-1),p={href:"https://api.flutter-io.cn/flutter/material/MaterialApp/onGenerateTitle.html",target:"_blank",rel:"noopener noreferrer"},i=(0,e._)("code",null,"MaterialApp.onGenerateTitle",-1),c=(0,e.uE)('<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n  onGenerateTitle<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>\n      <span class="token class-name">DemoLocalizations</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),u={href:"https://flutter.cn/docs/go/i18n-user-guide",target:"_blank",rel:"noopener noreferrer"},r=(0,e._)("h2",{id:"使用idea插件",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#使用idea插件","aria-hidden":"true"},"#"),(0,e.Uk)(" 使用idea插件")],-1),d={href:"https://plugins.jetbrains.com/plugin/13666-flutter-intl",target:"_blank",rel:"noopener noreferrer"},k={},m=(0,s(3744).Z)(k,[["render",function(n,a){const s=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[t,(0,e._)("p",null,[(0,e.Uk)("要查看使用该工具的示例 Flutter 应用，请参阅 "),(0,e._)("a",l,[o,(0,e.Wm)(s)]),(0,e.Uk)("。")]),(0,e._)("p",null,[(0,e.Uk)("如需本地化设备应用描述，你可以将本地化后的字符串传递给 "),(0,e._)("a",p,[i,(0,e.Wm)(s)]),(0,e.Uk)(":")]),c,(0,e._)("p",null,[(0,e.Uk)("有关本地化工具的更多信息，例如处理 DateTime 和复数，请参见 "),(0,e._)("a",u,[(0,e.Uk)("国际化用户指南"),(0,e.Wm)(s)]),(0,e.Uk)("。")]),r,(0,e._)("p",null,[(0,e.Uk)("使用"),(0,e._)("a",d,[(0,e.Uk)("flutter-intl"),(0,e.Wm)(s)]),(0,e.Uk)("插件,什么都不用配置,直接生成即可")])])}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);